<!--?xml version="1.0"?-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="author" content="Fred Swartz (www.fredswartz.com)">
  <meta name="level" content="1">
  <link rel="stylesheet" type="text/css" href="Java%20%20Example%20-%20JTextArea_files/notes.css">

  <title>Java: Example - JTextArea</title>
</head>
<body><div id="content">

<h1><a href="http://www.leepoint.net/notes-java/index.html">Java</a>: Example - JTextArea</h1>

<table>
<tbody><tr><td>
<img alt="" src="Java%20%20Example%20-%20JTextArea_files/TextAreaDemoBefore.gif">
</td>
<td valign="top">This is how the window looks initially.  There are no scrollbars visible.
They will be added only if there is sufficient data in the JTextArea to
make them necessary.
</td>
</tr></tbody></table>

<table summary="" border="0"><tbody><tr><td valign="top"><pre class="example2">  1 
  2 
  3 
  4 
  5 
  6 
  7 
  8 
  9 
 10 
 11 
 12 
 13 
 14 
 15 
 16 
 17 
 18 
 19 
 20 
 21 
 22 
 23 
 24 
 25 
 26 
 27 
 28 
 29 
 30 
 31 
 32 
 33 
 34 
 35 
 36 
</pre></td><td valign="top">
<div class="file"><pre>// File   : GUI/components/textarea/TextAreaDemoB.java
// Purpose: Illustrate JTextArea contained in JScrollPane
//          where scroll bars appear as needed.
// Author : Fred Swartz, 2006-07-27

import java.awt.*;
import javax.swing.*;

public class TextAreaDemoB extends JFrame {
    //============================================== instance variables
   <span class="hilite">JTextArea _resultArea = new JTextArea(6, 20);</span>
        
    //====================================================== constructor
    public TextAreaDemoB() {
        //... Set textarea's initial text, scrolling, and border.
        <span class="hilite">_resultArea.setText("Enter more text to see scrollbars");</span>
        <span class="hilite">JScrollPane scrollingArea = new JScrollPane(_resultArea);</span>
        
        //... Get the content pane, set layout, add to center
        JPanel content = new JPanel();
        content.setLayout(new BorderLayout());
        content.add(<span class="hilite">scrollingArea</span>, BorderLayout.CENTER);
        
        //... Set window characteristics.
        this.setContentPane(content);
        this.setTitle("TextAreaDemo B");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.pack();
    }
    
    //============================================================= main
    public static void main(String[] args) {
        JFrame win = new TextAreaDemoB();
        win.setVisible(true);
    }
}
</pre></div>
</td></tr></tbody></table>


<table>
<tbody><tr>
<td valign="top">This is how the window looks after typing in a long line
    of text.  A horizontal scrollbar is necessary.  It's a bit of a puzzle
    to me why the vertical scrollbar also appears because it's not needed.
    If you stretch the window to make it a little higher, the vertical
    scrollbar then disappears.
</td>
<td>
<img alt="" src="Java%20%20Example%20-%20JTextArea_files/TextAreaDemoAfter.gif">
</td>
</tr></tbody></table>


<div class="footer">Copyleft 2004 <a href="http://www.fredosaurus.com/">Fred Swartz</a> <a href="http://www.opensource.org/licenses/mit-license.php">MIT License</a></div>

</div>


</body></html>