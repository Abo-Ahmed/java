<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><link rel="canonical" href="http://www.dotnetperls.com/processbuilder"><style>#a{margin:0}body{font:18px/1.5 verdana;position:relative;padding:0 0 9em;width:959px;margin:0 auto}#F{top:3px;right:3px;position:absolute;text-align:right}#Q,#O{font-size:17px;border:0;margin:9px;background:#fff}#O:hover{background:#ddd}#Q{width:9em}#F>a{margin:0 9px}p,img{margin:0 310px 12px 9px}p[id]>b,a{display:block}a{margin:-12px 9px 12px;text-decoration:none}#p>a,a{color:#06c}a:hover{text-decoration:underline}:visited{color:#808}#p>a:active,a:active{color:red}#o,#F>a{color:#000}#y,#t,#r{margin-left:39px}pre>i{color:#393}#t>b{color:#f90}#r>b{color:#888}img{float:right}#p{text-align:justify;cursor:default}#p>*{margin:0 7px 0 0;font-weight:400;display:inline-block}pre{font-size:16px;padding:2px 9px 29px;line-height:1.2}pre>b{padding:2px 30px}#o{background:#ff9}#p>i{outline:#6fc solid 2px}h1,pre>b,#p>i{background:#6fc}h1{font:42px verdana;padding:21px 9px 9px;margin:0 0 15px}#b,u,a,h1{font-weight:700}i{font-style:normal}p>i{margin-left:30px}body>br{clear:both}#J{margin-bottom:40px}@media screen and (max-width:599px){body{width:auto}img{max-width:50%;height:auto;margin:1px!important}h1{padding-top:70px;font-size:32px}#y,p{margin:0 0 12px 9px!important}#z,#v,#w,#u{display:none}#q{bottom:40px;left:9px;right:auto;top:auto}a{margin-top:1px}#p>*{margin:1px 9px 8px 0;font-size:17px}p>i{margin:0}}</style><title>Java ProcessBuilder Examples: Start Process, EXE</title><meta name="viewport" content="width=device-width,initial-scale=1"><meta name="description" content="This Java example set uses the ProcessBuilder class. It uses command and start to issue operating system commands."></head><body><h1>Java ProcessBuilder</h1><p id="p"><a id="b" href="http://www.dotnetperls.com/arraylist-java">ArrayList</a> <a id="b" href="http://www.dotnetperls.com/hashmap">HashMap</a> <a id="b" href="http://www.dotnetperls.com/string-java">String</a> <a href="http://www.dotnetperls.com/array-java">Array</a> <a href="http://www.dotnetperls.com/calendar-java">Calendar</a> <a href="http://www.dotnetperls.com/cast-java">Cast</a> <a href="http://www.dotnetperls.com/class-java">Class</a> <a href="http://www.dotnetperls.com/console-java">Console</a> <a href="http://www.dotnetperls.com/constructor-java">Constructor</a> <a href="http://www.dotnetperls.com/enum-java">Enum</a> <a href="http://www.dotnetperls.com/try-java">Exception</a> <a href="http://www.dotnetperls.com/bufferedreader">File</a> <a href="http://www.dotnetperls.com/hashset-java">HashSet</a> <a href="http://www.dotnetperls.com/if-java">If</a> <a href="http://www.dotnetperls.com/interface-java">Interface</a> <a href="http://www.dotnetperls.com/for-java">Loop</a> <a href="http://www.dotnetperls.com/math-java">Math</a> <a href="http://www.dotnetperls.com/method-java">Method</a> <a href="http://www.dotnetperls.com/number-java">Number</a> <i>Process</i> <a href="http://www.dotnetperls.com/pattern-matches">Regex</a> <a href="http://www.dotnetperls.com/sort-java">Sort</a> <a href="http://www.dotnetperls.com/split-java">Split</a> <a href="http://www.dotnetperls.com/static-java">Static</a> <a href="http://www.dotnetperls.com/stringbuilder-java">StringBuilder</a> <a href="http://www.dotnetperls.com/switch-java">Switch</a></p><a href="http://www.dotnetperls.com/java" id="a"><img src="Java%20ProcessBuilder%20Examples%20%20Start%20Process,%20EXE_files/process.jpg" alt="Process" id="J" height="152" width="280"></a><p><b>Process.</b> When run, programs occupy their own processes. These are at the level of the operating system.<br>And one process,<br><i>in a Java program,</i><br><i>cannot contain another one.</i></p><br><img src="Java%20ProcessBuilder%20Examples%20%20Start%20Process,%20EXE_files/start.png" alt="Start" id="J" height="150" width="250"><p><b>Starting processes.</b>
 But with ProcessBuilder, in java.lang.ProcessBuilder, we construct and 
invoke operating system commands. We launch external processes—like 
EXEs.</p><br><img src="Java%20ProcessBuilder%20Examples%20%20Start%20Process,%20EXE_files/constructor.jpg" alt="Constructor: create new" id="J" height="165" width="279"><p><b>An example program.</b>
 This program creates an instance of ProcessBuilder. It then calls 
command() to set the command. We use two arguments: two strings.</p><p id="y"><b>Arguments:</b>We pass a variable number of arguments to command—it combines these strings into a command string.</p><p id="y"><b>Start:</b>With start we invoke the command. On a Windows operating system, Notepad opens the specified file.</p><pre><b>Based on:</b>

Java 7

<b>Program that uses ProcessBuilder, start: Java</b>

package program;

import java.io.IOException;
import java.lang.ProcessBuilder;

public class Program {
    public static void main(String[] args) throws IOException {

	<i>// Create ProcessBuilder.</i>
	<u>ProcessBuilder</u> p = new ProcessBuilder();

	<i>// Use command "notepad.exe" and open the file.</i>
	p.command(<i id="o">"notepad.exe"</i>, <i id="o">"C:\\file.txt"</i>);
	p.start();
    }
}</pre><img src="Java%20ProcessBuilder%20Examples%20%20Start%20Process,%20EXE_files/java-3.jpg" alt="Java" height="236" width="212"><p><b>Folder, EXE.</b>
 In this example we invoke a specific executable at a known location on 
the computer. We concat a folder path and an executable name. Here I 
invoke photoshop.exe.</p><p id="t"><b>Tip:</b>To pass an argument to the exe, specify a second argument to command. This can be a target file location to open.</p><pre><b>Program that uses ProcessBuilder: Java</b>

package program;

import java.io.IOException;
import java.lang.ProcessBuilder;

public class Program {
    public static void main(String[] args) throws IOException {

	String folder = "C:\\Program Files\\Adobe\\Adobe Photoshop CC\\";
	String exe = <i id="o">"photoshop.exe"</i>;

	<i>// Create and start Process with ProcessBuilder.</i>
	<u>ProcessBuilder</u> p = new ProcessBuilder();
	p.command(folder + exe);
	p.start();
    }
}</pre><img src="Java%20ProcessBuilder%20Examples%20%20Start%20Process,%20EXE_files/open-close.jpg" alt="Open and close" height="238" width="220"><p><b>RedirectOutput.</b>
 This program uses the redirectOutput method to have an executable 
program write to a file. It uses the 7-Zip EXE, a compression utility, 
and writes to "test.txt."</p><p id="y"><b>File:</b>The file must exist on the disk for this example to correctly work. We can separately create the file.</p><p id="r"><b>Output:</b>The program runs 7za.exe with no arguments, so the EXE does nothing of importance. We can pass further arguments to Zza.</p><a id="y" href="http://www.dotnetperls.com/7-zip-examples">7-Zip Command-Line</a><pre><b>Program that uses redirectOutput: Java</b>

package program;

import java.io.File;
import java.io.IOException;

public class Program {
    public static void main(String[] args) throws IOException {

	<i>// Create ProcessBuilder and target 7-Zip executable.</i>
	<u>ProcessBuilder</u> b = new ProcessBuilder();
	b.command(<i id="o">"C:\\7za.exe"</i>);

	<i>// Redirect output to this file.</i>
	b.<u>redirectOutput</u>(new File(<i id="o">"C:\\folder\\test.txt"</i>));
	b.start();
    }
}

<b>Contents: test.txt</b>

7-Zip (A) 9.07 beta  Copyright (c) 1999-2009 Igor Pavlov  2009-08-29

Usage: 7za &lt;command&gt; [&lt;switches&gt;...] &lt;archive_name&gt; [&lt;file_names&gt;...]
       [&lt;@listfiles...&gt;]</pre><img src="Java%20ProcessBuilder%20Examples%20%20Start%20Process,%20EXE_files/error.jpg" alt="Error" style="margin-bottom:20px" height="180" width="264"><p><b>Throws IOException.</b> As with file handling, launching processes is prone to failure. This is not our fault. But we must protect against it.</p><br><img src="Java%20ProcessBuilder%20Examples%20%20Start%20Process,%20EXE_files/throw.png" alt="Throw keyword" style="margin-bottom:129px" height="71" width="273"><p><b>Handling exceptions.</b>
 We can specify the method throws exceptions in its declaration. 
Alternatively we can handle the exceptions with try and catch 
statements.</p><a href="http://www.dotnetperls.com/try-java">Exceptions</a><br><a href="http://www.dotnetperls.com/java" id="a"><img src="Java%20ProcessBuilder%20Examples%20%20Start%20Process,%20EXE_files/summary.jpg" height="90" width="255"></a><p><b>With external processes,</b>
 we often can make our programs simpler. We can replace threads (which 
are complex) with external processes (which are isolated). This is 
maintainable, simple.</p><form id="F" action="//www.google.com/search"><input name="sitesearch" value="dotnetperls.com" type="hidden"><input id="Q" name="q"><input id="O" value="Go" type="submit"><a href="http://www.dotnetperls.com/java">Java</a></form></body></html>